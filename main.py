from bd import *
from newsapi import NewsApiClient
import sqlite3
from config import *
import telebot
from telebot import types
from functions import *
import requests
from datetime import date, timedelta

# –æ–±—ä—è–≤–ª—è–µ–º –±–æ—Ç–∞
bot = telebot.TeleBot(key_tg, parse_mode=None)


# –æ–±—ä—è–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞. –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ —Å–ª–æ–≤–æ "–Ω–∞—á–∞—Ç—å/–ø–æ–º–æ—â—å"
@bot.message_handler(commands=['start', '–Ω–∞—á–∞—Ç—å'])
# –∑–∞–ø—É—Å–∫–∞—é—Ç —Ñ—É–Ω–∫—Ü–∏—é "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"
def send_welcome(message):
    # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    con = sqlite3.connect(r"db.db")
    registration(con, con.cursor(), message.from_user.id)

    # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ –±–æ—Ç–µ
    markup = types.ReplyKeyboardMarkup(row_width=1)
    itembtn1 = types.KeyboardButton('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–æ–≤–æ—Å—Ç–µ–π')
    itembtn2 = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —Å–≤–æ–∏–º –ø–æ–¥–ø–∏—Å–∫–∞–º')
    itembtn3 = types.KeyboardButton('–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π')
    markup.add(itembtn1, itembtn2, itembtn3)

    # –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ –Ω–æ–≤–æ—Å—Ç–Ω–æ–º –±–æ—Ç–µ!\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:", reply_markup=markup)


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=["text"])
# —Ä–∞–±–æ—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
def news_work(message):
    if message.chat.type == "private":
        chat_id = message.chat.id

        if message.text == "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–æ–≤–æ—Å—Ç–µ–π":
            # —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
            markup = types.InlineKeyboardMarkup(row_width=3)

            # –±–µ—Ä–µ–º –∏–∑ –±–∞–∑—ã —Å–ª–æ–≤–∞—Ä—å –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            categories = get_all_categories(sqlite3.connect(r"db.db").cursor())
            print(categories)
            for k, n, v in categories:
                # —Å–æ–∑–¥–∞–µ–º –Ω—É–∂–Ω–æ–µ –∫–æ–ª-–≤–æ –∫–Ω–æ–ø–æ–∫ –ø–æ–¥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                btn = types.InlineKeyboardButton(f"{n}", callback_data=f"sub{v}")
                markup.add(btn)

            bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è:", reply_markup=markup)

        elif message.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —Å–≤–æ–∏–º –ø–æ–¥–ø–∏—Å–∫–∞–º":
            # –ø–æ–ª—É—á–∞–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ —é–∑–µ—Ä–∞
            subscribes = get_subscribes(sqlite3.connect(r"db.db").cursor(),
                                             message.from_user.id)

            # –≤—ã–≤–æ–¥ –º–∞—Å—Å–∏–≤–∞ —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã
            if len(subscribes) > 0:
                # —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
                markup = types.InlineKeyboardMarkup(row_width=3)

                for k, n,v in subscribes:
                    # —Å–æ–∑–¥–∞–µ–º –Ω—É–∂–Ω–æ–µ –∫–æ–ª-–≤–æ –∫–Ω–æ–ø–æ–∫ –ø–æ–¥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    btn = types.InlineKeyboardButton(f"{n}", callback_data=f"{v}")
                    markup.add(btn)

                bot.send_message(chat_id, f"–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:", reply_markup=markup)
                bot.send_message(chat_id, "üëÜ")
                bot.send_message(chat_id, f"–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ—ë")

            else:
                bot.send_message(chat_id, "–í—ã –µ—â–µ –Ω–∏–∫—É–¥–∞ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã")
                bot.send_message(chat_id, "üôÄ")

        elif message.text == "–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π":
            # –ø–æ–ª—É—á–∞–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ —é–∑–µ—Ä–∞
            subscribes = get_subscribes(sqlite3.connect(r"db.db").cursor(),
                                             message.from_user.id)

            # –≤—ã–≤–æ–¥ –º–∞—Å—Å–∏–≤–∞ —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã
            if len(subscribes) > 0:
                # —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
                markup = types.InlineKeyboardMarkup(row_width=3)

                for k, n, v in subscribes:
                    # —Å–æ–∑–¥–∞–µ–º –Ω—É–∂–Ω–æ–µ –∫–æ–ª-–≤–æ –∫–Ω–æ–ø–æ–∫ –ø–æ–¥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    btn = types.InlineKeyboardButton(f"{n}", callback_data=f"del{v}")
                    markup.add(btn)

                bot.send_message(chat_id, f"–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –æ—Ç –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è:", reply_markup=markup)
            else:
                bot.send_message(chat_id, "–í—ã –µ—â–µ –Ω–∏–∫—É–¥–∞ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã")
                bot.send_message(chat_id, "üôÄ")

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            # —Ä–∞–±–æ—Ç–∞ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Å –Ω–æ–≤–æ—Å—Ç–Ω—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
            categories = get_all_categories(sqlite3.connect(r"db.db").cursor())
            for k, n, v in categories:
                # –µ—Å–ª–∏ –º—ã –≤—ã–±–∏—Ä–∞–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ "–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è"
                if call.data == f"sub{v}":
                    sub = subscribe(sqlite3.connect(r"db.db"), call.from_user.id,
                                    k)
                    print(sub)
                    if sub:
                        markup = types.InlineKeyboardMarkup(row_width=2)
                        btn = types.InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏", callback_data=f"{v}")
                        markup.add(btn)
                        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                              text="üëç", reply_markup=None)
                        bot.send_message(call.message.chat.id,
                                         f"–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é '{n}'. –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É üëá",
                                         reply_markup=markup)
                    else:
                        markup = types.InlineKeyboardMarkup(row_width=2)
                        btn = types.InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏", callback_data=f"{v}")
                        markup.add(btn)
                        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                              text=f"–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é '{n}'. –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É üëá",
                                              reply_markup=markup)

                # –µ—Å–ª–∏ –º—ã –≤—ã–±–∏—Ä–∞–ª–∏ "–æ—Ç–ø–∏—Å–∞—Ç—å—Å—è"
                elif call.data == f"del{v}":
                    unsub = unsubscribe(sqlite3.connect(r"db.db"),
                                        call.from_user.id, k)
                    if unsub:
                        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                              text="üòî",
                                              reply_markup=None)
                        bot.send_message(call.message.chat.id, f"–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–Ω—ã –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{n}'")
                    else:
                        bot.send_message(call.message.chat.id, "–í—ã –µ—â–µ –Ω–∏–∫—É–¥–∞ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã")
                        bot.send_message(call.message.chat.id, "üôÄ")

                # –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                elif call.data == f"{v}":
                    bot.send_message(call.message.chat.id,f"–ù–æ–≤–æ—Å—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{n}':")
                    newsapi = NewsApiClient(api_key=f'{key_news}')
                    news=newsapi.get_top_headlines(category=f'{v}',
                                              language='ru',
                                              country='ru',
                                              page_size=3)

                    # –ø–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞—Ä—å dict
                    for i in news['articles']:
                        bot.send_message(call.message.chat.id, f"{i['title']}\n{i['url']}")

    except Exception as e:
        print(repr(e))

# –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.infinity_polling()
